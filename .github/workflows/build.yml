name: Build and test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_NOLOGO: true
    steps:
    
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: Set up .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore /warnaserror

    - name: Pack
      run: dotnet pack --configuration Release --no-build --output nuget-out
    - name: Publish to nuget.org
      run: dotnet nuget push --api-key ${{ secrets.NUGET_API_KEY_DOCKERSDK }} --source https://api.nuget.org/v3/index.json nuget-out/*.nupkg
    
    - name: Install Powershell
      if: ${{ env.ACT }}
      run: |
        # Update the list of packages
        sudo apt-get update
        # Install pre-requisite packages.
        sudo apt-get install -y wget apt-transport-https software-properties-common
        # Download the Microsoft repository GPG keys
        wget -q https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb
        # Register the Microsoft repository GPG keys
        sudo dpkg -i packages-microsoft-prod.deb
        # Update the list of products
        sudo apt-get update
        # Enable the "universe" repositories
        sudo add-apt-repository universe
        # Install PowerShell
        sudo apt-get install -y powershell
    - name: Set up test environment
      run: |
        pwsh -f ./DockerSdk.Tests/bin/Release/net5.0/scripts/up.ps1
        docker image ls
        docker container ls --all
    - name: Run the tests
      run: dotnet test --configuration Release --no-build --verbosity normal
